// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-remind-api/internal/repo (interfaces: RemindsRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-remind-api/internal/models"
)

// MockRemindsRepo is a mock of RemindsRepo interface.
type MockRemindsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRemindsRepoMockRecorder
}

// MockRemindsRepoMockRecorder is the mock recorder for MockRemindsRepo.
type MockRemindsRepoMockRecorder struct {
	mock *MockRemindsRepo
}

// NewMockRemindsRepo creates a new mock instance.
func NewMockRemindsRepo(ctrl *gomock.Controller) *MockRemindsRepo {
	mock := &MockRemindsRepo{ctrl: ctrl}
	mock.recorder = &MockRemindsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemindsRepo) EXPECT() *MockRemindsRepoMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockRemindsRepo) Add(arg0 []models.Remind) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockRemindsRepoMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockRemindsRepo)(nil).Add), arg0)
}

// Describe mocks base method.
func (m *MockRemindsRepo) Describe(arg0 uint64) (*models.Remind, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Describe", arg0)
	ret0, _ := ret[0].(*models.Remind)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Describe indicates an expected call of Describe.
func (mr *MockRemindsRepoMockRecorder) Describe(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Describe", reflect.TypeOf((*MockRemindsRepo)(nil).Describe), arg0)
}

// List mocks base method.
func (m *MockRemindsRepo) List(arg0, arg1 uint64) ([]models.Remind, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]models.Remind)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockRemindsRepoMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockRemindsRepo)(nil).List), arg0, arg1)
}

// Remove mocks base method.
func (m *MockRemindsRepo) Remove(arg0, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockRemindsRepoMockRecorder) Remove(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockRemindsRepo)(nil).Remove), arg0, arg1)
}
